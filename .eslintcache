[{"D:\\code\\react\\weather-portal\\src\\index.js":"1","D:\\code\\react\\weather-portal\\src\\App.js":"2","D:\\code\\react\\weather-portal\\src\\NavBar.js":"3","D:\\code\\react\\weather-portal\\src\\Home.js":"4","D:\\code\\react\\weather-portal\\src\\WeatherData.js":"5"},{"size":221,"mtime":1612276400795,"results":"6","hashOfConfig":"7"},{"size":551,"mtime":1612799254536,"results":"8","hashOfConfig":"7"},{"size":1152,"mtime":1613060080244,"results":"9","hashOfConfig":"7"},{"size":1302,"mtime":1613062832294,"results":"10","hashOfConfig":"7"},{"size":3422,"mtime":1613060080071,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1qq0ee2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\code\\react\\weather-portal\\src\\index.js",[],["24","25"],"D:\\code\\react\\weather-portal\\src\\App.js",["26"],"D:\\code\\react\\weather-portal\\src\\NavBar.js",["27"],"D:\\code\\react\\weather-portal\\src\\Home.js",[],"D:\\code\\react\\weather-portal\\src\\WeatherData.js",["28"],"import { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\n\r\nconst WeatherData = ({datas,loca,setLoca,handleSubmit,clickFromChild}) => {\r\n    \r\n    const FarenheitToCelcius = (k) => {\r\n        var fc = (k - 32) * 5 / 9;\r\n        return fc.toFixed(2);\r\n    };\r\n\r\n    const [cel,setCel] = useState(true);\r\n    const [far, setFar] = useState(false);\r\n    const [style, setStyle] = useState({style1 : null,style2: 'green'});\r\n\r\n    // const [getState, setGetState] = useState('');\r\n    // const [state, setState] = useState('');\r\n    const [text, setText] = useState('');\r\n    //const [style2, setStyle2] = useState(null);\r\n\r\n    const handleClick1 = () => {\r\n        setCel(true);\r\n        setFar(false);\r\n        setStyle({ style1 : 'green', style2: null });\r\n        //setStyle2(null);\r\n    };\r\n    const handleClick2 = () => {\r\n        setFar(true);\r\n        setCel(false);\r\n        setStyle({ style1 : null, style2: 'green' });\r\n        //setStyle2('green');\r\n    };\r\n\r\n    // const inputHandler = (event) => {\r\n    //     setGetState(event.target.value);\r\n    // };\r\n      \r\n    // const submitHandler = () => {\r\n    //     setState(setLoca);\r\n    //     // setGetState(null);\r\n    //     //props.set_current_state(getState);\r\n    // };\r\n    \r\n    return ( \r\n        <div className=\"card border border-dark mb-3 mx-auto\">\r\n            {loca}\r\n            <div className=\"links d-block\">\r\n                <div className=\"col-auto\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    // onChange={inputHandler}\r\n                    // onChange={(e) => handleSubmit(e.target.value)}\r\n                    onChange={(e) => setText(e.target.value)} \r\n                    // value={getState} \r\n                    placeholder='Enter the location'\r\n                />\r\n                </div>\r\n                <button className=\"btn btn-primary mt-2\" onClick={() => clickFromChild(text)} >Search</button>              \r\n            </div>\r\n\r\n            <div className=\"card-header\"> {datas.sys.country} - {datas.name}</div>\r\n            <div className=\"card-body text-dark\">\r\n                <h5 className=\"card-title\">Temperature - \r\n                <span>\r\n                    {cel && <div>{datas.main.temp}</div> } {far && <div>{FarenheitToCelcius(datas.main.temp)}</div> }\r\n                    <Link className=\"tempo\" onClick={handleClick1} style={{ color:style.style1 }} >&#x2103;\r\n                    </Link>\r\n                    |\r\n                    <Link className=\"tempo\" onClick={handleClick2} style={{ color:style.style2 }} >&#x2109;</Link>\r\n                </span>\r\n                 </h5>\r\n                <h6> Longitude : {datas.coord.lon}  | Latitude : {datas.coord.lat} </h6>\r\n                <p className=\"card-text\">\r\n                    { datas.weather.map((data) => (\r\n                        <div className=\"blog-preview\" key={data.id}>\r\n                            <h5> Main - {data.main} </h5>\r\n                            <h5> Description - {data.description} </h5>\r\n                        </div>\r\n                    ) ) }                   \r\n                    Humidity - {datas.main.humidity} <br/>\r\n                    Wind Speed - {datas.wind.speed} <br/>\r\n                    Time Zone : {datas.timezone}\r\n                </p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default WeatherData;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":35,"nodeType":"35","messageId":"36","endLine":2,"endColumn":40},{"ruleId":"33","severity":1,"message":"37","line":6,"column":12,"nodeType":"35","messageId":"36","endLine":6,"endColumn":17},{"ruleId":"33","severity":1,"message":"38","line":2,"column":10,"nodeType":"35","messageId":"36","endLine":2,"endColumn":19},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]